from dataclasses import dataclass
from typing import Optional
from datetime import datetime, date


@dataclass
class User:
    """Data class representing a user in 'users' table."""
    username: str
    full_name: str
    role: str
    status: str
    id_number: str
    dob: date
    user_id: Optional[int] = None # Auto-incremented primary key

    def __post_init__(self):
        """
        This method is called after the dataclass is initialized.
        It ensures that the 'dob' attribute is a date object.
        """
        # Convert string date to date object if necessary
        if isinstance(self.dob, str):
            self.dob = datetime.strptime(self.dob, '%Y-%m-%d').date()

@dataclass
class Assignment:
    """Data class representing a doctor-patient assignment."""
    doctor_id: int
    patient_id: int
    status: str
    assignment_id: Optional[int] = None # Auto-incremented primary key
    patient_name: Optional[str] = None
    doctor_name: Optional[str] = None
    patient_username: Optional[str] = None
    doctor_username: Optional[str] = None

@dataclass
class Prediction:
    """Data class representing a cancer risk prediction made by a doctor."""
    doctor_id: int
    patient_id: int
    age: int
    cancer_stage: str
    tumor_size: float
    tumor_type: str
    metastasis: str
    treatment_type: str
    comorbidities: str
    predicted_class: str
    prediction_probability: float
    prediction_id: Optional[int] = None # Auto-incremented primary key
    prediction_timestamp: Optional[datetime] = None # Auto-generated by the database
    patient_name: Optional[str] = None
    doctor_name: Optional[str] = None

    def __post_init__(self):
        """
        This method is called after the dataclass is initialized.
        It ensures that the 'prediction_timestamp' attribute is a date object.
        """
        # Convert string date to date object if necessary
        if isinstance(self.prediction_timestamp, str):
            self.prediction_timestamp = datetime.strptime(self.prediction_timestamp, '%Y-%m-%d %H:%M:%S')